#!/usr/bin/env node

var falafel = require('falafel');
var Promise = require('promise');
var glob = Promise.denodeify(require('glob'));
var read = Promise.denodeify(require('fs').readFile);
var hashNode = require(__dirname + '/../hash_node');
var hashAst = require(__dirname + '/../hash_ast');
var mergeResults = require(__dirname + '/../merge_results');
var reportResults = require(__dirname + '/../report_results');
var filterResults = require(__dirname + '/../filter_results');
var Hashset = require('hashset.js');

function getFileNames(patterns) {
  return Promise.all(patterns.map(function(pattern) {
    return glob(pattern, {})
  })).then(function(filesOfFiles) {
    return filesOfFiles.reduce(function(memo, files) {
      return memo.concat(files);
    }, []);
  });
}

function hashFiles(files) {
  return Promise.all(files.map(function(file) {
    return read(file).then(function(content) {
      return {file: file, tree: hashAst(file, content.toString())};
    });
  }));
}

function tap(value) {
  console.log(JSON.stringify(value));
  return value;
}

getFileNames(process.argv.slice(2))
.then(hashFiles)
.then(mergeResults)
.then(filterResults)
.then(reportResults)
.then(console.log)
.catch(function(err) {
  console.log(err);
  console.log(err.stack);
});
